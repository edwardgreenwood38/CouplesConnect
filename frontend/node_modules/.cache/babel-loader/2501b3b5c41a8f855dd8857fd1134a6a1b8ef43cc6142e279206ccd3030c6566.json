{"ast":null,"code":"var _jsxFileName = \"/Users/rminor/Desktop/Final-Project/CouplesConnect/frontend/src/components/RegistrationForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('form submitted');\n    try {\n      const response = await fetch(`/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          password: password\n        })\n      });\n      if (response.ok) {\n        alert('Registration Completed!');\n      } else {\n        alert('Registration Failed!, Please try again');\n      }\n    } catch (error) {\n      console.log(error);\n      alert('An error occured, Please try again in 1 min!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        children: [\"type = \\\"email\\\" placeholder = \\\"Email\\\" value = \", email, \"onChange = \", e => setEmail(e.target.value), \"required\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        children: [\"type = \\\"password\\\" placeholder = \\\"Password\\\" value = \", password, \"onChange = \", e => setPassword(e.target.value), \"required\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistrationForm, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegistrationForm","_s","username","setUsername","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","target","value","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/Users/rminor/Desktop/Final-Project/CouplesConnect/frontend/src/components/RegistrationForm.jsx"],"sourcesContent":["import React, {useState} from 'react';\n\n\nfunction RegistrationForm() {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        console.log('form submitted');\n        try {\n            const response = await fetch(`/register`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: username,\n                    email: email,\n                    password: password,\n                    \n                }),\n            })\n            if (response.ok) {\n                alert('Registration Completed!');\n\n        } else {\n            alert('Registration Failed!, Please try again');\n        }\n     }catch(error) {\n        console.log(error);\n        alert('An error occured, Please try again in 1 min!');\n     }\n    };\n\n    return (\n        <div className = \"container\">\n            <h1>New User Registration</h1>\n            <form onSubmit = {handleSubmit}>\n            <input>\n                type = \"email\"\n                placeholder = \"Email\"\n                value = {email}\n                onChange = {(e) => setEmail(e.target.value)}\n                required\n            </input>\n\n            <input>\n                type = \"password\"\n                placeholder = \"Password\"\n                value = {password}\n                onChange = {(e) => setPassword(e.target.value)}\n                required \n             </input>\n\n            <input\n                type = \"text\"\n                placeholder = \"Username\"\n                value = {username}\n                onChange = {(e) => setUsername(e.target.value)}\n                required\n            />\n\n                {/* Button */}\n            <button type=\"submit\">Register</button>\n            </form>\n        </div>\n    );\n}\n\nexport default RegistrationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}